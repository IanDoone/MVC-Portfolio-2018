@model CarouselModel
@functions {
	Microsoft.AspNetCore.Html.IHtmlContent generateCarouselItem(int i) {
		return Html.Partial("~/Views/Shared/_CarouselItem.cshtml", Model.Items.ElementAt(i), new ViewDataDictionary(this.ViewData) { { "Index", i } });
	}
}
@{
	int ItemCount = Model.Items.Count();
	int MiddleItem = ItemCount / 2;
}
<div class="carousel" data-automatic="@(Model.Automatic ? "1" : "0")" data-automaticDelay="@Model.AutomaticDelay.ToString()" data-delayedResume="@(Model.DelayedResume ? "1" : "0")" data-resumeDelay="@Model.ResumeDelay.ToString()" data-rotating="0">
	<i class="fa fa-angle-left carouselControl carouselLeft"></i>
	<div class="carouselItemContainer" style="right: @(MiddleItem.ToString() + "00%")">
		@for(int i = (MiddleItem + 1); i <= (ItemCount - 1); i++) { @generateCarouselItem(i); }
		@for (int i = 0; i <= MiddleItem; i++) { @generateCarouselItem(i); }
	</div>
	<i class="fa fa-angle-right fa-5x carouselControl carouselRight"></i>
	<div class="carouselCaptionPane"></div>
	<div class="carouselPlaceDisplay">
		@for (int i = 0; i < ItemCount; i++)
		{<i class="fa fa-circle carouselIndicator @((i == 0) ? "currentIndicator" : "")"></i>}
	</div>
</div>